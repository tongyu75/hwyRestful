<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czz.hwy.bean.user.FeedBacks" >
  <resultMap id="BaseResultMap" type="com.czz.hwy.bean.user.FeedBacks" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="version_code" property="versionCode" jdbcType="INTEGER" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, employee_id, version_code, device_id, create_at, update_at
  </sql>
  <select id="getFeedBacksById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feedbacks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteFeedBacks" parameterType="java.lang.Integer" >
    delete from feedbacks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertFeedBacks" parameterType="com.czz.hwy.bean.user.FeedBacks" >
    insert into feedbacks (id, content, employee_id, 
      version_code, device_id, create_at, 
      update_at)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{employeeId,jdbcType=INTEGER}, 
      #{versionCode,jdbcType=INTEGER}, #{deviceId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.czz.hwy.bean.user.FeedBacks" >
    insert into feedbacks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="versionCode != null" >
        version_code,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateFeedBacks" parameterType="com.czz.hwy.bean.user.FeedBacks" >
    update feedbacks
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="versionCode != null" >
        version_code = #{versionCode,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czz.hwy.bean.user.FeedBacks" >
    update feedbacks
    set content = #{content,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=INTEGER},
      version_code = #{versionCode,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>