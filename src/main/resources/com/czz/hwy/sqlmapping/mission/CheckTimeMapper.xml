<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czz.hwy.bean.mission.CheckTime">
	<resultMap id="BaseResultMap" type="com.czz.hwy.bean.mission.CheckTime">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="eval_Type" property="evalType" jdbcType="INTEGER" />
		<result column="employee_id" property="employeeId" jdbcType="INTEGER" />
		<result column="supervisor_id" property="supervisorId"
			jdbcType="INTEGER" />
		<result column="check_address" property="checkAddress"
			jdbcType="VARCHAR" />
		<result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="check_lat" property="checkLat" jdbcType="DOUBLE" />
		<result column="check_lng" property="checkLng" jdbcType="DOUBLE" />
		<result column="check_status" property="checkStatus" jdbcType="INTEGER" />
	</resultMap>
		<resultMap id="KindInfoMap" type="com.czz.hwy.bean.mission.KindInfo">
		<result column="eval_type" property="evalType" jdbcType="INTEGER" />
		<result column="eval_name" property="evalName" jdbcType="VARCHAR" />
		<result column="testNum" property="testNum" jdbcType="INTEGER" />
		<result column="successNum" property="successNum" jdbcType="INTEGER" />
		<result column="failNum" property="failNum" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, eval_Type, employee_id, supervisor_id, check_address,
		check_time,
		publish_time,
		check_lat, check_lng, check_status
	</sql>
	<select id="getCheckTimeById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from checktime
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getCheckTimeForSelf" parameterType="com.czz.hwy.bean.mission.CheckTime" resultMap="BaseResultMap">
	select B.* from check_duty A ,checktime B
	where a.check_id = B.id
	and A.employee_id=#{employeeId}
	and A.eval_type = B.eval_type
	and DATE_FORMAT(b.check_time,'%Y-%m-%d') =	DATE_FORMAT(CURDATE(),'%Y-%m-%d')
	</select>

	<select id="getCheckTimeFailPeoNum" resultType="java.lang.Integer">
		select count(DISTINCT employee_id) from check_duty where eval_type=2 and
		check_id in(select id from checktime where check_status=2 and
		DATE_FORMAT(check_time,'%Y-%m-%d')=DATE_FORMAT(CURDATE(),'%Y-%m-%d'))
	</select>
	<select id="getCheckTimeFailCouNum" resultType="java.lang.Integer">
		select count(id) from checktime where check_status=2 and
		DATE_FORMAT(check_time,'%Y-%m-%d')=DATE_FORMAT(CURDATE(),'%Y-%m-%d')
	</select>
	<select id="getCheckTimeFailPeoMon" resultType="java.util.Map">
		select DATE_FORMAT(check_time,'%Y-%m-%d') as 'date',count(DISTINCT
		employee_id) as 'failPeo' FROM checktime where
		DATE_FORMAT(check_time,'%Y-%m')=DATE_FORMAT(CURDATE(),'%Y-%m') and
		check_status=2 GROUP BY DATE_FORMAT(check_time,'%Y-%m-%d')
	</select>
	<select id="getCheckTimeFailCouMon" resultType="java.util.Map">
		select DATE_FORMAT(check_time,'%Y-%m-%d') as 'date',count(id) as 'failCou'
		FROM checktime where
		DATE_FORMAT(check_time,'%Y-%m')=DATE_FORMAT(CURDATE(),'%Y-%m') and
		check_status=2 GROUP BY DATE_FORMAT(check_time,'%Y-%m-%d')
	</select>
	<select id="getCheckTimeAllDays" resultType="java.lang.Integer">
		select count(DISTINCT DATE_FORMAT(check_time,'%Y-%m-%d')) from checktime
		where DATE_FORMAT(check_time,'%Y-%m')=DATE_FORMAT(CURDATE(),'%Y-%m')
	</select>

	<delete id="deleteCheckTime" parameterType="java.lang.Integer">
		delete from checktime
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insertCheckTime" parameterType="com.czz.hwy.bean.mission.CheckTime">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into checktime (id, eval_Type, employee_id,
		supervisor_id,
		check_address, check_time,
		publish_time, check_lat, check_lng,
		check_status)
		values (#{id,jdbcType=INTEGER},
		#{evalType,jdbcType=INTEGER},
		#{employeeId,jdbcType=INTEGER},
		#{supervisorId,jdbcType=INTEGER}, #{checkAddress,jdbcType=VARCHAR},
		#{checkTime,jdbcType=TIMESTAMP},
		#{publishTime,jdbcType=TIMESTAMP},
		#{checkLat,jdbcType=DOUBLE},
		#{checkLng,jdbcType=DOUBLE},
		#{checkStatus,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.czz.hwy.bean.mission.CheckTime">
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into checktime
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="evalType != null">
				eval_Type,
			</if>
			<if test="employeeId != null">
				employee_id,
			</if>
			<if test="supervisorId != null">
				supervisor_id,
			</if>
			<if test="checkAddress != null">
				check_address,
			</if>
			<if test="checkTime != null">
				check_time,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="checkLat != null">
				check_lat,
			</if>
			<if test="checkLng != null">
				check_lng,
			</if>
			<if test="checkStatus != null">
				check_status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="evalType != null">
				#{evalType,jdbcType=INTEGER},
			</if>
			<if test="employeeId != null">
				#{employeeId,jdbcType=INTEGER},
			</if>
			<if test="supervisorId != null">
				#{supervisorId,jdbcType=INTEGER},
			</if>
			<if test="checkAddress != null">
				#{checkAddress,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				#{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkLat != null">
				#{checkLat,jdbcType=DOUBLE},
			</if>
			<if test="checkLng != null">
				#{checkLng,jdbcType=DOUBLE},
			</if>
			<if test="checkStatus != null">
				#{checkStatus,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateCheckTime" parameterType="com.czz.hwy.bean.mission.CheckTime">
		update checktime
		<set>
			<if test="evalType != null">
				eval_Type = #{evalType,jdbcType=INTEGER},
			</if>
			<if test="employeeId != null">
				employee_id = #{employeeId,jdbcType=INTEGER},
			</if>
			<if test="supervisorId != null">
				supervisor_id = #{supervisorId,jdbcType=INTEGER},
			</if>
			<if test="checkAddress != null">
				check_address = #{checkAddress,jdbcType=VARCHAR},
			</if>
			<if test="checkTime != null">
				check_time = #{checkTime,jdbcType=TIMESTAMP},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checkLat != null">
				check_lat = #{checkLat,jdbcType=DOUBLE},
			</if>
			<if test="checkLng != null">
				check_lng = #{checkLng,jdbcType=DOUBLE},
			</if>
			<if test="checkStatus != null">
				check_status = #{checkStatus,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.czz.hwy.bean.mission.CheckTime">
		update checktime
		set eval_Type = #{evalType,jdbcType=INTEGER},
		employee_id =
		#{employeeId,jdbcType=INTEGER},
		supervisor_id =
		#{supervisorId,jdbcType=INTEGER},
		check_address =
		#{checkAddress,jdbcType=VARCHAR},
		check_time =
		#{checkTime,jdbcType=TIMESTAMP},
		publish_time =
		#{publishTime,jdbcType=TIMESTAMP},
		check_lat =
		#{checkLat,jdbcType=DOUBLE},
		check_lng = #{checkLng,jdbcType=DOUBLE},
		check_status = #{checkStatus,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="getCheckMinutesInfoByBean" parameterType="com.czz.hwy.bean.mission.CheckTime"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from checktime
		<where>
			<if test="id != 0">
				and id = #{id,jdbcType=INTEGER}
			</if>
			<if test="evalType != 0">
				and eval_Type = #{evalType,jdbcType=INTEGER}
			</if>
			<if test="employeeId != 0">
				and employee_id = #{employeeId,jdbcType=INTEGER}
			</if>
			<if test="supervisorId != 0">
				and supervisor_id = #{supervisorId,jdbcType=INTEGER}
			</if>
			<if test="checkAddress != null">
				and check_address = #{checkAddress,jdbcType=VARCHAR}
			</if>
			<if test="checkTime != null">
				and DATE_FORMAT(check_time,'%Y-%m-%d') =
				DATE_FORMAT(#{checkTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
			</if>
			<if test="publishTime != null">
				and publish_time = #{publishTime,jdbcType=TIMESTAMP}
			</if>
			<if test="checkLat != 0.0">
				and check_lat = #{checkLat,jdbcType=DOUBLE}
			</if>
			<if test="checkLng != 0.0">
				and check_lng = #{checkLng,jdbcType=DOUBLE}
			</if>
			<if test="checkStatus != '' ">
				and check_status = #{checkStatus,jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<select id="getCheckExitsTimeInfoByBean" resultMap="BaseResultMap"
		parameterType="checkTime">
		SELECT
		<include refid="Base_Column_List" />
		from checktime
		where TIMESTAMPDIFF(MINUTE,#{checkTime},check_time) &lt; 30
		and TIMESTAMPDIFF(MINUTE,#{checkTime},check_time) &gt; 0
	</select>
	
	<select id="getcheckTimeTypeInfo" resultMap="KindInfoMap"
		parameterType="com.czz.hwy.bean.mission.CheckTime">
		
		SELECT
		COUNT(d.id) sum,
		e.eval_name,
		e.eval_type,
	    d.status status
		FROM
		(
		SELECT
		gg. STATUS,
		gg.eid,
		gg.id,
		dp.duty_area_id,
		dp.duty_point_id
		FROM
		(
		SELECT
		g.check_status STATUS,
		a.employee_id eid,
		g.id
		FROM
		check_duty a,
		checktime g
		WHERE
		a.employee_id = #{employeeId}
		AND a.check_id = g.id
		AND a.eval_type = g.eval_type
		AND	DATE_FORMAT(g.check_time, '%Y-%m-%d') = DATE_FORMAT(#{checkTime},'%Y-%m-%d')
		) gg,
		dutyplans dp
		WHERE
		gg.eid = dp.employee_id
		) D
		LEFT JOIN evaluations e ON e.area_id = D.duty_area_id
		AND e.point_id = D.duty_point_id
		GROUP BY
		D.status
	</select>
	<!-- 五分钟任务统计数据 -->
	<select id="checkTimeCensus" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.area_id,
			a.point_id,
			a.ts,
			date_format(a.check_time, '%Y-%m-%d') AS check_time,
			b.ps,
			da.area_name AS area_name,
			dp.point_name AS point_name
		FROM
			(<!-- 五克任务不合格次数 -->
				SELECT
					count(*) ts,
					t2.area_id,
					t2.point_id,
					t2.check_time
				FROM
					(
						SELECT
							t.area_id,
							t.point_id,
							date_format(t.check_time, '%Y%m%d') AS check_time
						FROM
							(
								SELECT DISTINCT
									cd.area_id AS area_id,
									cd.point_id AS point_id,
									ct.check_time<!-- 次数时间要精确到秒 再去重 -->
								FROM
									(SELECT * FROM checktime
									<where>
										<if test="firstDate!=null and firstDate!=''">
											<![CDATA[check_time>=#{firstDate} and check_time<#{lastDate}]]>
										</if>
									</where>
									) ct
								JOIN check_duty cd ON ct.id = cd.check_id
								AND ct.eval_type = 2
								WHERE
									ct.check_status = 2
									<if test="areaId!=null and areaId!=''">
										and cd.area_id=#{areaId}
									</if>
									<if test="pointId!=null and pointId!=''">
										and cd.point_id=#{pointId}
									</if>
							) t
					) t2
				GROUP BY
					area_id,
					point_id,
					check_time
				ORDER BY
					check_time DESC
				<if test="rows!=0">
					limit #{row},#{rows}
				</if>
			) a
		JOIN (<!-- 五克任务不合格人数 -->
			SELECT
				count(*) ps,
				t.area_id,
				t.point_id,
				t.check_time
			FROM
				(
					SELECT DISTINCT
						cd.area_id AS area_id,
						cd.point_id AS point_id,
						date_format(ct.check_time, '%Y%m%d') AS check_time,<!-- 人数时间精确到天 再去重 -->
						cd.employee_id AS employee_id
					FROM
						(SELECT * FROM checktime
						<where>
							<if test="firstDate!=null and firstDate!=''">
									<![CDATA[check_time>=#{firstDate} and check_time<#{lastDate}]]>
							</if>
						</where>
									
						) ct
					JOIN check_duty cd ON ct.id = cd.check_id
					AND ct.eval_type = 2
					WHERE
						ct.check_status = 2
						<if test="areaId!=null and areaId!=''">
							and cd.area_id=#{areaId}
						</if>
						<if test="pointId!=null and pointId!=''">
							and cd.point_id=#{pointId}
						</if>
				) t
			GROUP BY
				area_id,
				point_id,
				check_time
			ORDER BY
				check_time DESC
			<if test="rows!=0">
				limit #{row},#{rows}
			</if>
		) b ON a.area_id = b.area_id
		AND a.point_id = b.point_id
		AND a.check_time = b.check_time
		LEFT OUTER JOIN dutyarea da ON a.area_id = da.id
		LEFT OUTER JOIN dutypoint dp ON a.point_id = dp.id
	</select>
	<!-- 五分钟任务统计总数据 -->
	<select id="checkTimeCensusCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM
			(
				SELECT
					count(*) ts,
					t2.area_id,
					t2.point_id,
					t2.check_time
				FROM
					(
						SELECT
							t.area_id,
							t.point_id,
							date_format(t.check_time, '%Y%m%d') AS check_time
						FROM
							(
								SELECT DISTINCT
									cd.area_id AS area_id,
									cd.point_id AS point_id,
									ct.check_time
								FROM
									(SELECT * FROM checktime 
									<where>
										<if test="firstDate!=null and firstDate!=''">
											<![CDATA[check_time>=#{firstDate} and check_time<#{lastDate}]]>
										</if>
									</where>
									) ct
								JOIN check_duty cd ON ct.id = cd.check_id
								AND ct.eval_type = 2
								WHERE
									ct.check_status = 2 
									<if test="areaId!=null and areaId!=''">
										and cd.area_id=#{areaId}
									</if>
									<if test="pointId!=null and pointId!=''">
										and cd.point_id=#{pointId}
									</if>
							) t
					) t2
				GROUP BY
					area_id,
					point_id,
					check_time
			) a
	</select>
	<!-- 五分钟不合格次数图表数据 -->
	<select id="checkTimeTsCensus" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			count(*) ts,
			check_time
		FROM
			(
				SELECT
					date_format(t.check_time, '%Y/%m/%d') AS check_time
				FROM
					(
						SELECT DISTINCT
							cd.area_id AS area_id,
							cd.point_id AS point_id,
							ct.check_time
						FROM
							(SELECT * FROM checktime
							<where>
								<if test="firstDate!=null and firstDate!=''">
									<![CDATA[check_time>=#{firstDate} and check_time<#{lastDate}]]>
								</if>
							</where>
							) ct
						JOIN check_duty cd ON ct.id = cd.check_id
						AND ct.eval_type = 2
						WHERE
							ct.check_status = 2
							<if test="areaId!=null and areaId!=''">
								and cd.area_id=#{areaId}
							</if>
							<if test="pointId!=null and pointId!=''">
								and cd.point_id=#{pointId}
							</if>
					) t
			) t2
		GROUP BY
			check_time
		ORDER BY
			check_time DESC
	</select>
	<!-- 五分钟任务不合格人数图表数据 -->
	<select id="checkTimePsCesus" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			count(*) ps,
			check_time
		FROM
			(
				SELECT DISTINCT
					date_format(ct.check_time, '%Y/%m/%d') AS check_time,
					cd.employee_id AS employee_id
				FROM
					(SELECT * FROM checktime
					<where>
						<if test="firstDate!=null and firstDate!=''">
								<![CDATA[check_time>=#{firstDate} and check_time<#{lastDate}]]>
						</if>
					</where>
								
					) ct
				JOIN check_duty cd ON ct.id = cd.check_id
				AND ct.eval_type = 2
				WHERE
					ct.check_status = 2
					<if test="areaId!=null and areaId!=''">
						and cd.area_id=#{areaId}
					</if>
					<if test="pointId!=null and pointId!=''">
						and cd.point_id=#{pointId}
					</if>
			) t2
		GROUP BY
			t2.check_time
		ORDER BY
			check_time DESC
	</select>
	
	<!-- 管理人员尽职监督 近一周五分钟道路测量地点（领导APP端） -->
	<select id="getCheTimLatLngForLeadApp" parameterType="com.czz.hwy.bean.mission.CheckTime" resultMap="BaseResultMap">
	   select <include refid="Base_Column_List" /> 
	     from checktime
		where employee_id = #{employeeId}
		  and date_format(check_time,'%Y-%m-%d') &lt;= date_format(now(),'%Y-%m-%d') 
		  and date_format(check_time,'%Y-%m-%d') &gt; date_format(date_sub(now(),interval 7 day),'%Y-%m-%d')
		  and eval_type = 1
	</select>
	
    <!-- 获取五克考核信息记录条数，2016-11-14 -->
    <select id="getCheckTimeHistoryCount" resultType="java.lang.Integer" parameterType="com.czz.hwy.bean.mission.CheckGram">
        select count(rd.id)
          from check_duty rd 
          join checktime t on rd.check_id = t.id
          join evaltype t1 on t.eval_type = t1.eval_value and t1.type = 2
          join users u on t.supervisor_id = u.employee_id and u.status = 1
          join users u1 on  rd.employee_id = u1.employee_id and u1.status = 1
          join dutypoint dp on rd.point_id = dp.id
          join dutyarea da on rd.area_id = da.id
          left join (select ck.check_id,count(ck.id) num
                       from checkimage ck
                      group by ck.check_id) ci on rd.check_id = ci.check_id
        <where>
           <if test="areaId != 0">
           and rd.area_id = #{areaId}
          </if>
           <if test="pointId != 0">
           and rd.point_id = #{pointId}
          </if>          
          <if test="startTimeStr != null and startTimeStr != ''">
           and DATE_FORMAT(t.check_time, '%Y-%m-%d') &gt;= STR_TO_DATE(#{startTimeStr},"%Y-%m-%d")
          </if>                    
          <if test="endTimeStr != null and endTimeStr != ''">
           and DATE_FORMAT(t.check_time, '%Y-%m-%d') &lt;= STR_TO_DATE(#{endTimeStr},"%Y-%m-%d")
          </if>                           
          <if test="employeeId != 0">
           and rd.employee_id like = #{employeeId}
          </if>                    
          <if test="dutyPeopleName != null and dutyPeopleName != ''">
           and u1.showname like concat('%', #{dutyPeopleName}, '%') 
          </if>          
           and t.reader = 0
       </where>
    </select>

    <!-- 获取五克考核信息记录，2016-11-14 -->
    <select id="getCheckTimeHistory" resultType="java.util.Map" parameterType="com.czz.hwy.bean.mission.CheckGram">
        select da.area_name areaName,
                dp.point_name pointName,
                u1.showname dutyPeopleName,
                date_format(t.check_time,'%Y-%m-%d %H:%i') checkTime,
                t1.eval_name evalName,
                u.showname checkUser,
                t.id id,
                t.check_lat checkLat,
                t.check_lng checkLng,           
                t.eval_type evalType,                     
                IFNULL(ci.num,0) imageFlag
          from check_duty rd 
          join checktime t on rd.check_id = t.id
          join evaltype t1 on t.eval_type = t1.eval_value and t1.type = 2
          join users u on t.supervisor_id = u.employee_id and u.status = 1
          join users u1 on  rd.employee_id = u1.employee_id and u1.status = 1
          join dutypoint dp on rd.point_id = dp.id
          join dutyarea da on rd.area_id = da.id
          left join (select ck.check_id,count(ck.id) num
                       from checkimage ck
                      group by ck.check_id) ci on rd.check_id = ci.check_id
        <where>
           <if test="areaId != 0">
           and rd.area_id = #{areaId}
          </if>
           <if test="pointId != 0">
           and rd.point_id = #{pointId}
          </if>          
          <if test="startTimeStr != null and startTimeStr != ''">
           and DATE_FORMAT(t.check_time, '%Y-%m-%d') &gt;= STR_TO_DATE(#{startTimeStr},"%Y-%m-%d")
          </if>                    
          <if test="endTimeStr != null and endTimeStr != ''">
           and DATE_FORMAT(t.check_time, '%Y-%m-%d') &lt;= STR_TO_DATE(#{endTimeStr},"%Y-%m-%d")
          </if>                           
          <if test="employeeId != 0">
           and rd.employee_id like = #{employeeId}
          </if>                    
          <if test="dutyPeopleName != null and dutyPeopleName != ''">
           and u1.showname like concat('%', #{dutyPeopleName}, '%') 
          </if>          
           and t.reader = 0
       </where>
         ORDER BY t.check_time DESC
         limit #{row},#{rows}
    </select>	
	
</mapper>