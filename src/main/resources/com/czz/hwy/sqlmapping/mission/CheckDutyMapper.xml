<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czz.hwy.bean.mission.CheckDuty" >
  <resultMap id="BaseResultMap" type="com.czz.hwy.bean.mission.CheckDuty" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="check_id" property="checkId" jdbcType="INTEGER" />
    <result column="eval_type" property="evalType" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, check_id, eval_Type, employee_id, create_at, update_at
  </sql>
  <select id="getCheckDutyById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from check_duty
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteCheckDuty" parameterType="java.lang.Integer" >
    delete from check_duty
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertCheckDuty" parameterType="checkDuty" >
    insert into check_duty (id, check_id, eval_Type, 
      employee_id, create_at, update_at
      )
    values (#{id,jdbcType=INTEGER}, #{checkId,jdbcType=INTEGER}, #{evalType,jdbcType=INTEGER}, 
      #{employeeId,jdbcType=INTEGER}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="checkDuty" >
    insert into check_duty
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="checkId != null" >
        check_id,
      </if>
      <if test="evalType != null" >
        eval_Type,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="checkId != null" >
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="evalType != null" >
        #{evalType,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateCheckDuty" parameterType="checkDuty" >
    update check_duty
    <set >
      <if test="checkId != null" >
        check_id = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="evalType != null" >
        eval_Type = #{evalType,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="checkDuty" >
    update check_duty
    set check_id = #{checkId,jdbcType=INTEGER},
      eval_Type = #{evalType,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getCheckDutyInfoByBean" parameterType="checkDuty" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from check_duty
    where 1=1
       <if test="checkId != 0" >
        and check_id = #{checkId,jdbcType=INTEGER}
      </if>
     <if test="checkId != 0" >
        and check_id = #{checkId,jdbcType=INTEGER}
      </if>
      <if test="evalType != 0" >
       and  eval_Type = #{evalType,jdbcType=INTEGER}
      </if>
      <if test="employeeId != 0" >
        and employee_id = #{employeeId,jdbcType=INTEGER}
      </if>
      <if test="createAt != null" >
        and create_at = #{createAt,jdbcType=TIMESTAMP}
      </if>
      <if test="updateAt != null" >
        and update_at = #{updateAt,jdbcType=TIMESTAMP}
      </if>
    
  </select>
  
</mapper>